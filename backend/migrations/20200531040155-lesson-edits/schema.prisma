datasource db {
  provider = "mysql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int          @id @default(autoincrement())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  email      String       @unique
  password   String
  name       String?
  points     Int          @default(0)
  badges     Badge[]
  attendance Attendance[]
  quizzes    UserQuiz[]
}

model Badge {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  img       String
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Lesson {
  id           Int          @id @default(autoincrement())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  title        String
  open         Boolean      @default(false)
  date         DateTime
  materials    String?
  hindiVideo   String?
  englishVideo String?
  attendance   Attendance[]
  quiz         Quiz
}

model Attendance {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lessonId  Int
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  present   Boolean  @default(true)
}

model Quiz {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  lessonId  Int
  lesson    Lesson     @relation(fields: [lessonId], references: [id])
  form      String
  max       Int
  UserQuiz  UserQuiz[]
}

model UserQuiz {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quizId    Int
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  score     Int
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}
